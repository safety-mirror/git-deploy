#!/bin/bash
source ~/.profile

REPO_NAME=$1

if [ -z "$1" ]; then
	echo "usage: mkrepo repo-name"
	exit 1
fi

# Create repo
mkdir -p /git/${REPO_NAME}.git
cd /git/${REPO_NAME}.git
git init

#allow working tree to be checked out on receive
git config --bool receive.denyCurrentBranch false

# Populate new repos with a base 'proxy' hooks
# This hooks will perform the following for every new push:
# 1. Run user-defined pre-receive/update hooks
# 2. Update the working tree
# 3. Run user-defined post-receive hook
# 4. Backup

ln -s .git/hooks/pre-receive ../hooks/pre-receive
cat <<- "EOF" > .git/hooks/pre-receive
	#!/bin/bash
	source ~/.profile
	unset GIT_DIR
	cd ..
	env -i git reset --hard
	[ ! -f hooks/pre-receive ] || bash hooks/pre-receive <&0
EOF
cat <<- "EOF" > .git/hooks/update
	#!/bin/bash
	source ~/.profile
	[ ! -f ../hooks/update ] || bash ../hooks/update $@
EOF
cat <<- "EOF" > .git/hooks/post-receive
	#!/bin/bash
	source ~/.profile
	[ ! -f ../hooks/post-receive ] || bash ../hooks/post-receive
	backup
EOF
chmod +x .git/hooks/pre-receive
chmod +x .git/hooks/update
chmod +x .git/hooks/post-receive

# Backup addition of new repo
cd /git
backup
